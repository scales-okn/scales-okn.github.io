import{_ as n,M as o,p as s,q as r,R as t,t as e,N as c,V as d,a1 as i}from"./framework-5866ffd3.js";const h={},l=i('<h1 id="event-log" tabindex="-1"><a class="header-anchor" href="#event-log" aria-hidden="true">#</a> Event Log</h1><p>An event log is a detailed record of (a) <strong>Entities</strong>, or cases in the court context, that are captured via a unique identifier, Case ID. These entities go through (b) <strong>Activities</strong> occurring within the process. The activities’ names describe what occurred. Examples of court system activities include &quot;complaint&quot; and &quot;verdict&quot;. The log also contains (c) the <strong>Timestamp</strong> at which a specific entity interacted with a specific activity. In the court context, timestamps are recorded as the date when an activity occurred, e.g. the complaint was filed or the verdict was rendered. In addition to the case ID, activities, and timestamps, event logs often include metadata about the entities and activities involved. Accordingly, the event log we provide includes the following additional items:</p><ul><li><strong>Server ID</strong>: The judge (or judges) responsible for the event (standardized judge ID code).</li><li><strong>Case attributes</strong>: Case metadata and attributes (e.g., nature of suit, number of plaintiffs).</li></ul><p>In unstructured processes, activities often exhibit high variability due to contextual differences or noise, resulting in overly detailed models. The challenge is therefore to minimize the number of events per case, but still retain sufficient detail to capture any notable patterns. To achieve this, we created a hierarchical nested structure, with a limited set of broader Activity types and associated Activity Attributes that maintained access to specific details (e.g. &#39;motion&#39; and the more detailed &#39;motion to certify class&#39;).</p><p>Activity attributes provide information that distinguishes one event from another and/or impacts case routing or timing. This means that Activity attributes are either subtypes of Activities or they indicate a feature related to the flow. For example, the activity ‘order’ could have attributes such as ‘default judgment,’ indicating the type of order, and ‘dispositive,’ indicating that this order terminates a claim, a party, or a case. The nested structure preserves the descriptive power of event logs while mitigating the challenges posed by excessive detail. It allows analysts to focus on overarching process dynamics without losing the richness of unstructured data, reducing redundancy, improving clarity, and striking a balance between representation and interpretation.</p>',5),u=t("strong",null,"26 Activities",-1),g=t("strong",null,"55 Activity attributes",-1),f=i('<h3 id="activity" tabindex="-1"><a class="header-anchor" href="#activity" aria-hidden="true">#</a> Activity</h3><ul><li><strong>R&amp;R</strong>: A report and recommendation issued by a magistrate judge to a district court judge after consideration of a pending motion or other matter in the case, offering a non-binding recommendation for how the district court judge should rule.</li></ul><h3 id="activity-attributes" tabindex="-1"><a class="header-anchor" href="#activity-attributes" aria-hidden="true">#</a> Activity attributes</h3><ul><li><strong>Scheduling</strong>: An action by the court that sets a deadline or a date for future activity in the case.</li><li><strong>Rescheduling</strong>: An action by the court that changes an existing deadline or date for future activity in the case.</li><li><strong>Hearing/Conference</strong>: A hearing, conference, meeting, or other communication between the judge and the parties.</li></ul>',4);function v(m,p){const a=o("RouterLink");return s(),r("div",null,[l,t("p",null,[e("Our nesting scheme includes "),u,e(" and an associated set of "),g,e(". Most of these are defined in the SCALES Litigation Ontology "),c(a,{to:"/guide/ontology/"},{default:d(()=>[e("documentation")]),_:1}),e(". The event log also includes a set of additional Activities and Activity Attributes, which we developed to capture operations-specific aspects of litigation that the existing SCALES ontology does not cover. They are as follows:")]),f])}const b=n(h,[["render",v],["__file","index.html.vue"]]);export{b as default};
